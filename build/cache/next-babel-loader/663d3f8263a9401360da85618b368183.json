{"ast":null,"code":"import _classCallCheck from \"/home/delpinor/Dropbox/git/delpinocardenas.com.ar/barrister/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/delpinor/Dropbox/git/delpinocardenas.com.ar/barrister/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/home/delpinor/Dropbox/git/delpinocardenas.com.ar/barrister/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/delpinor/Dropbox/git/delpinocardenas.com.ar/barrister/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/home/delpinor/Dropbox/git/delpinocardenas.com.ar/barrister/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/delpinor/Dropbox/git/delpinocardenas.com.ar/barrister/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"/home/delpinor/Dropbox/git/delpinocardenas.com.ar/barrister/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/delpinor/Dropbox/git/delpinocardenas.com.ar/barrister/components/Form/index.js\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Joi from 'joi-browser';\nimport { Button, Grid, TextField } from '@material-ui/core';\nimport { toast } from 'react-toastify';\n\nvar Form = /*#__PURE__*/function (_Component) {\n  _inherits(Form, _Component);\n\n  var _super = _createSuper(Form);\n\n  function Form() {\n    var _this;\n\n    _classCallCheck(this, Form);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      name: '',\n      phone: '',\n      email: '',\n      address: '',\n      description: '',\n      error: {}\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"schema\", {\n      email: Joi.string().email({\n        minDomainAtoms: 2\n      }).required().error(function (errors) {\n        errors.forEach(function (err) {\n          switch (err.type) {\n            case \"string.email\":\n              err.message = 'email mast be A Valid Email';\n              break;\n\n            default:\n              err.message = 'email can not be empity';\n              break;\n          }\n        });\n        return errors;\n      }),\n      phone: Joi.string().required().error(function (errors) {\n        errors.forEach(function (err) {\n          switch (err.type) {\n            default:\n              err.message = 'phone can not be Empity';\n              break;\n          }\n        });\n        return errors;\n      }),\n      name: Joi.string().required().error(function (errors) {\n        errors.forEach(function (err) {\n          switch (err.type) {\n            default:\n              err.message = 'name can not be Empity';\n              break;\n          }\n        });\n        return errors;\n      }),\n      description: Joi.string().required().error(function (errors) {\n        errors.forEach(function (err) {\n          switch (err.type) {\n            default:\n              err.message = 'description can not be Empity';\n              break;\n          }\n        });\n        return errors;\n      }),\n      address: Joi.string()\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"changeHandler\", function (event) {\n      var _this$setState;\n\n      var error = _objectSpread({}, _this.state.error);\n\n      var errorMassage = _this.validationProperty(event);\n\n      if (errorMassage) {\n        error[event.target.name] = errorMassage;\n      } else {\n        delete error[event.target.name];\n      }\n\n      _this.setState((_this$setState = {}, _defineProperty(_this$setState, event.target.name, event.target.value), _defineProperty(_this$setState, \"error\", error), _this$setState));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (value) {\n      _this.setState({\n        country: value\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"validationProperty\", function (event) {\n      var Obj = _defineProperty({}, event.target.name, event.target.value);\n\n      var schema = _defineProperty({}, event.target.name, _this.schema[event.target.name]);\n\n      var _Joi$validate = Joi.validate(Obj, schema),\n          error = _Joi$validate.error;\n\n      return error ? error.details[0].message : null;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"validate\", function () {\n      var options = {\n        abortEarly: false\n      };\n      var form = {\n        name: _this.state.name,\n        email: _this.state.email,\n        phone: _this.state.phone,\n        description: _this.state.description\n      };\n\n      var _Joi$validate2 = Joi.validate(form, _this.schema, options),\n          error = _Joi$validate2.error;\n\n      if (!error) return null;\n      var errors = {};\n\n      var _iterator = _createForOfIteratorHelper(error.details),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var item = _step.value;\n          errors[item.path[0]] = item.message;\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      return errors;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"submitHandler\", function (event) {\n      event.preventDefault();\n\n      var error = _this.validate();\n\n      if (error) {\n        _this.setState({\n          error: error || {}\n        });\n      } else {\n        // Send email\n        fetch('/api/contact', {\n          method: 'POST',\n          headers: {\n            'Accept': 'application/json, text/plain, */*',\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(_this.state)\n        }).then(function (res) {\n          console.log('Response received');\n\n          if (res.status === 200) {\n            console.log('Response succeeded!');\n\n            _this.setState({\n              name: '',\n              phone: '',\n              email: '',\n              address: '',\n              description: ''\n            });\n          }\n        });\n        toast.success('Please check Consol log');\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(Form, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var options = [{\n        level: 'Family Law',\n        value: 'family law'\n      }, {\n        level: 'Criminal Law',\n        value: 'criminal law'\n      }, {\n        level: 'Business Law',\n        value: 'business law'\n      }, {\n        level: 'Personal Injury',\n        value: 'personal injury'\n      }, {\n        level: 'Education Law',\n        value: 'education law'\n      }, {\n        level: 'Drugs Crime',\n        value: 'drugs crime'\n      }];\n      return /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.submitHandler,\n        className: \"contactForm\",\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 4,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            sm: 6,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              className: \"formInput\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                placeholder: \"Your Name\",\n                value: this.state.name,\n                name: \"name\",\n                onChange: this.changeHandler,\n                className: \"form-control\",\n                type: \"text\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 29\n              }, this), this.state.error.name && /*#__PURE__*/_jsxDEV(\"p\", {\n                children: this.state.error.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 55\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            sm: 6,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              className: \"formInput\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                placeholder: \"Phone\",\n                value: this.state.phone,\n                name: \"phone\",\n                onChange: this.changeHandler,\n                className: \"form-control\",\n                type: \"phone\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 29\n              }, this), this.state.error.phone && /*#__PURE__*/_jsxDEV(\"p\", {\n                children: this.state.error.phone\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 56\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            sm: 6,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              className: \"formInput\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                placeholder: \"Email\",\n                value: this.state.email,\n                name: \"email\",\n                onChange: this.changeHandler,\n                className: \"form-control\",\n                type: \"email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 29\n              }, this), this.state.error.email && /*#__PURE__*/_jsxDEV(\"p\", {\n                children: this.state.error.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 56\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            sm: 6,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              className: \"formInput\",\n              children: this.props.addressInfo ? /*#__PURE__*/_jsxDEV(Grid, {\n                className: \"formInput\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  placeholder: \"Address\",\n                  value: this.state.address,\n                  name: \"address\",\n                  onChange: this.changeHandler,\n                  className: \"form-control\",\n                  type: \"address\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 191,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 33\n              }, this) : /*#__PURE__*/_jsxDEV(\"select\", {\n                value: this.state.address,\n                className: \"form-control\",\n                onChange: this.changeHandler,\n                name: \"address\",\n                children: options.map(function (option) {\n                  return /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: option.value,\n                    children: option.level\n                  }, option.value, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 206,\n                    columnNumber: 45\n                  }, _this2);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              className: \"formInput\",\n              children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n                className: \"form-control\",\n                value: this.state.description,\n                onChange: this.changeHandler,\n                placeholder: \"Case Description...\",\n                name: \"description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 29\n              }, this), this.state.error.description && /*#__PURE__*/_jsxDEV(\"p\", {\n                children: this.state.error.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 62\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            sm: 6,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              children: \"Appointment\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 13\n      }, this);\n    }\n  }]);\n\n  return Form;\n}(Component);\n\nexport default Form;","map":{"version":3,"sources":["/home/delpinor/Dropbox/git/delpinocardenas.com.ar/barrister/components/Form/index.js"],"names":["React","Component","Joi","Button","Grid","TextField","toast","Form","name","phone","email","address","description","error","string","minDomainAtoms","required","errors","forEach","err","type","message","event","state","errorMassage","validationProperty","target","setState","value","country","Obj","schema","validate","details","options","abortEarly","form","item","path","preventDefault","fetch","method","headers","body","JSON","stringify","then","res","console","log","status","success","level","submitHandler","changeHandler","props","addressInfo","map","option"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport Joi from 'joi-browser'\r\nimport { Button, Grid, TextField } from '@material-ui/core'\r\nimport { toast } from 'react-toastify';\r\nclass Form extends Component {\r\n    state = {\r\n        name: '',\r\n        phone: '',\r\n        email: '',\r\n        address: '',\r\n        description: '',\r\n        error: {}\r\n    }\r\n\r\n    schema = {\r\n        email: Joi.string().email({ minDomainAtoms: 2 }).required().error(errors => {\r\n            errors.forEach(err => {\r\n                switch (err.type) {\r\n                    case \"string.email\":\r\n                        err.message = 'email mast be A Valid Email';\r\n                        break;\r\n                    default:\r\n                        err.message = 'email can not be empity';\r\n                        break;\r\n                }\r\n            });\r\n            return errors;\r\n        }),\r\n        phone: Joi.string().required().error(errors => {\r\n            errors.forEach(err => {\r\n                switch (err.type) {\r\n                    default:\r\n                        err.message = 'phone can not be Empity';\r\n                        break;\r\n                }\r\n            });\r\n            return errors;\r\n        }),\r\n        name: Joi.string().required().error(errors => {\r\n            errors.forEach(err => {\r\n                switch (err.type) {\r\n                    default:\r\n                        err.message = 'name can not be Empity';\r\n                        break;\r\n                }\r\n            });\r\n            return errors;\r\n        }),\r\n        description: Joi.string().required().error(errors => {\r\n            errors.forEach(err => {\r\n                switch (err.type) {\r\n                    default:\r\n                        err.message = 'description can not be Empity';\r\n                        break;\r\n                }\r\n            });\r\n            return errors;\r\n        }),\r\n        address: Joi.string(),\r\n    }\r\n    changeHandler = event => {\r\n        const error = { ...this.state.error };\r\n        const errorMassage = this.validationProperty(event);\r\n        if (errorMassage) {\r\n            error[event.target.name] = errorMassage;\r\n        } else {\r\n            delete error[event.target.name];\r\n        }\r\n        this.setState({\r\n            [event.target.name]: event.target.value,\r\n            error\r\n        })\r\n    };\r\n    handleChange = (value) => {\r\n        this.setState({\r\n            country: value\r\n        })\r\n    };\r\n\r\n    validationProperty = event => {\r\n        const Obj = { [event.target.name]: event.target.value };\r\n        const schema = { [event.target.name]: this.schema[event.target.name] }\r\n        const { error } = Joi.validate(Obj, schema);\r\n        return error ? error.details[0].message : null\r\n    };\r\n\r\n    validate = () => {\r\n        const options = { abortEarly: false }\r\n        const form = {\r\n            name: this.state.name,\r\n            email: this.state.email,\r\n            phone: this.state.phone,\r\n            description: this.state.description,\r\n        }\r\n        const { error } = Joi.validate(form, this.schema, options)\r\n        if (!error) return null;\r\n\r\n        const errors = {};\r\n        for (let item of error.details) errors[item.path[0]] = item.message\r\n        return errors;\r\n    };\r\n\r\n    submitHandler = event => {\r\n        event.preventDefault()\r\n        const error = this.validate();\r\n        if (error) {\r\n            this.setState({\r\n                error: error || {}\r\n            })\r\n        } else {\r\n            // Send email\r\n            fetch('/api/contact', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Accept': 'application/json, text/plain, */*',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(this.state)\r\n            }).then((res) => {\r\n                console.log('Response received')\r\n                if (res.status === 200) {\r\n                    console.log('Response succeeded!')\r\n                    this.setState({\r\n                        name: '',\r\n                        phone: '',\r\n                        email: '',\r\n                        address: '',\r\n                        description: '',\r\n                    })\r\n                }\r\n            })\r\n            toast.success('Please check Consol log')\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const options = [\r\n            { level: 'Family Law', value: 'family law' },\r\n            { level: 'Criminal Law', value: 'criminal law' },\r\n            { level: 'Business Law', value: 'business law' },\r\n            { level: 'Personal Injury', value: 'personal injury' },\r\n            { level: 'Education Law', value: 'education law' },\r\n            { level: 'Drugs Crime', value: 'drugs crime' },\r\n        ]\r\n\r\n        return (\r\n            <form onSubmit={this.submitHandler} className='contactForm'>\r\n                <Grid container spacing={4}>\r\n                    <Grid item sm={6} xs={12}>\r\n                        <Grid className=\"formInput\">\r\n                            <input\r\n                                placeholder=\"Your Name\"\r\n                                value={this.state.name}\r\n                                name=\"name\"\r\n                                onChange={this.changeHandler}\r\n                                className=\"form-control\"\r\n                                type=\"text\" />\r\n                            {this.state.error.name && <p>{this.state.error.name}</p>}\r\n                        </Grid>\r\n\r\n                    </Grid>\r\n                    <Grid item sm={6} xs={12}>\r\n                        <Grid className=\"formInput\">\r\n                            <input\r\n                                placeholder=\"Phone\"\r\n                                value={this.state.phone}\r\n                                name=\"phone\"\r\n                                onChange={this.changeHandler}\r\n                                className=\"form-control\"\r\n                                type=\"phone\" />\r\n                            {this.state.error.phone && <p>{this.state.error.phone}</p>}\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item sm={6} xs={12}>\r\n                        <Grid className=\"formInput\">\r\n                            <input\r\n                                placeholder=\"Email\"\r\n                                value={this.state.email}\r\n                                name=\"email\"\r\n                                onChange={this.changeHandler}\r\n                                className=\"form-control\"\r\n                                type=\"email\" />\r\n                            {this.state.error.email && <p>{this.state.error.email}</p>}\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item sm={6} xs={12}>\r\n                        <Grid className=\"formInput\">\r\n                            {this.props.addressInfo ? (\r\n                                <Grid className=\"formInput\">\r\n                                    <input\r\n                                        placeholder=\"Address\"\r\n                                        value={this.state.address}\r\n                                        name=\"address\"\r\n                                        onChange={this.changeHandler}\r\n                                        className=\"form-control\"\r\n                                        type=\"address\" />\r\n                                </Grid>\r\n                            ) : (\r\n                                    <select\r\n                                        value={this.state.address}\r\n                                        className=\"form-control\"\r\n                                        onChange={this.changeHandler}\r\n                                        name=\"address\">\r\n                                        {options.map(option => (\r\n                                            <option\r\n                                                key={option.value}\r\n                                                value={option.value}\r\n                                            >\r\n                                                {option.level}\r\n                                            </option>\r\n                                        ))}\r\n                                    </select>\r\n                                )}\r\n\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Grid className=\"formInput\">\r\n                            <textarea\r\n                                className=\"form-control\"\r\n                                value={this.state.description}\r\n                                onChange={this.changeHandler}\r\n                                placeholder=\"Case Description...\"\r\n                                name=\"description\" />\r\n                            {this.state.error.description && <p>{this.state.error.description}</p>}\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item sm={6} xs={12}>\r\n                        <Button type=\"submit\">Appointment</Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </form>\r\n        )\r\n    }\r\n}\r\nexport default Form"]},"metadata":{},"sourceType":"module"}